[
    // Use tab to cycle through tabs
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "(editorFocus && vim.mode != 'Insert' && vim.mode != 'Visual' && vim.mode != 'VisualLine') || (!inputFocus && !editorFocus)"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "(editorFocus && vim.mode != 'Insert' && vim.mode != 'Visual' && vim.mode != 'VisualLine') || (!inputFocus && !editorFocus)"
    },
    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "(editorFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine'))"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "(editorFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine'))"
    },
    // Ctrl + tab to cycle editor groups
    {
        "key": "ctrl+tab",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorFocus"
    },
    // Open file and take focus
    {
        "key": "o",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "cmd+shift+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    // Use tab to select from suggestions
    {
        "key": "tab",
        "command": "selectNextCodeAction",
        "when": "editorFocus && codeActionMenuVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevCodeAction",
        "when": "editorFocus && codeActionMenuVisible"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    // Better shortcuts for workbench views
    {
        "key": "-",
        "command": "workbench.view.explorer",
        "when": "(vim.mode != 'Insert' && editorTextFocus) || !inputFocus"
    },
    {
        "key": "cmd+shift+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    {
        "key": "home",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "cmd+shift+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    // Open lazygit
    {
        "key": "cmd+shift+g",
        "command": "workbench.action.tasks.runTask",
        "args": "editor_after_lazygit"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.tasks.runTask",
        "args": "editor_after_lazygit"
    },
    // Open tab at index
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    // Insert cursor above and below using vim keys
    {
        "key": "cmd+shift+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "cmd+shift+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed"
    },
    // Ctrl+D to multi-select
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.addSelectionToPreviousFindMatch",
        "when": "editorFocus"
    },
    // SQLTools setup
    {
        "key": "cmd+shift+enter",
        "command": "sqltools.executeQueryFromFile",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'sql'"
    },
    {
        "key": "cmd+enter",
        "command": "sqltools.executeQuery",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'sql' && editorHasSelection"
    },
    {
        "key": "cmd+enter",
        "command": "sqltools.executeCurrentQuery",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'sql'"
    },
    // Close terminals with same chord as editor
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && (terminalHasBeenCreated || terminalIsOpen || terminalProcessSupported)"
    },
    // Shift-enter for newlines in terminal
    {
        "key": "shift+enter",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\\\r\n"
        },
        "when": "terminalFocus"
    },
    // Toggle specific panels
    {
        "key": "cmd+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelAlignment == 'center' || panelPosition != 'bottom' && panelPosition != 'top'"
    },
    {
        "key": "cmd+shift+c",
        "command": "workbench.action.positronConsole.open"
    },
    {
        "key": "cmd+shift+r",
        "command": "claude-vscode.sidebar.open"
    },
    {
        "key": "escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && vim.mode == 'Insert'"
    }
]
