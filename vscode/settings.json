{
    "breadcrumbs.enabled": false,
    "catppuccin.customUIColors": {
        "all": {
            "editorOverviewRuler.background": "base"
        }
    },
    "cSpell.customDictionaries": {
        "vim-dict": {
            "name": "vim-dict",
            "path": "~/dotfiles/spell/en.utf-8.add",
            "description": "Words sourced from vim dictionary",
            "addWords": true
        }
    },
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.enabledFileTypes": {
        "json": false,
        "jsonc": false
    },
    "dataWrangler.experiments.copilot.enabled": true,
    "editor.fontFamily": "'JetBrainsMono Nerd Font', 'JetBrainsMono NF', monospace",
    "editor.fontLigatures": true,
    "editor.fontSize": 14,
    "editor.formatOnSave": false,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnPaste": false,
    "editor.overviewRulerBorder": false,
    "editor.rulers": [
        80,
        120
    ],
    "editor.scrollbar.vertical": "visible",
    "editor.scrollbar.horizontal": "visible",
    "editor.scrollBeyondLastLine": false,
    "editor.suggestSelection": "first",
    "errorLens.excludeBySource": [
        "cSpell"
    ],
    "explorer.confirmDelete": false,
    "files.exclude": {
        "**/__pycache__": true,
        "**/.git": true,
        "**/.idea": true,
        "**/*.pyc": true,
        "**/node_modules*": true,
        "**/tmp*": true
    },
    "files.trimTrailingWhitespace": true,
    "git.openRepositoryInParentFolders": "never",
    "jupyter.askForKernelRestart": false,
    "jupyter.interactiveWindow.textEditor.autoAddNewCell": false,
    "jupyter.interactiveWindow.textEditor.executeSelection": true,
    "jupyter.showVariableViewWhenDebugging": true,
    "path-intellisense.showHiddenFiles": true,
    "python.analysis.autoImportCompletions": true,
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "python.languageServer": "Pylance",
    "python.REPL.enableREPLSmartSend": true,
    "python.terminal.launchArgs": [
        "-m",
        "IPython",
        "--no-autoindent",
    ],
    "r.rpath.mac": "/opt/homebrew/bin/R",
    "r.rterm.mac": "/opt/homebrew/bin/R",
    "remote.SSH.enableAgentForwarding": true,
    "remote.SSH.remotePlatform": {
        "ccao-dsnow": "linux",
        "ccao-shiny-server": "linux"
    },
    "security.promptForLocalFileProtocolHandling": false,
    "security.workspace.trust.startupPrompt": "always",
    "sqlfluff.dialect": "trino",
    "sqlfluff.executablePath": ".venv/bin/sqlfluff",
    "sqlfluff.suppressNotifications": true,
    "sqltools.results.limit": 10000,
    "terminal.integrated.defaultProfile.osx": "bash",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.env.osx": {
        "SHELL": "/opt/homebrew/bin/bash"
    },
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font, JetBrainsMono NF, monospace",
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.gpuAcceleration": "on",
    "terminal.integrated.macOptionIsMeta": true,
    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "bash",
            "args": [
                "-l"
            ],
            "icon": "terminal-bash"
        },
        "tmux": {
            "path": "tmux",
            "args": [
                "new",
                "-A",
                "-s",
                "vscode"
            ],
            "icon": "terminal-tmux"
        }
    },
    "terminal.integrated.profiles.osx": {
        "bash": {
            "path": "/opt/homebrew/bin/bash",
            "args": [
                "-l"
            ],
            "icon": "terminal-bash"
        },
        "tmux": {
            "path": "/opt/homebrew/bin/tmux",
            "args": [
                "new",
                "-A",
                "-s",
                "vscode"
            ],
            "icon": "terminal-tmux"
        }
    },
    "terminal.integrated.shellIntegration.decorationsEnabled": "overviewRuler",
    "terminal.integrated.shellIntegration.enabled": true,
    "terminal.integrated.shellIntegration.suggestEnabled": true,
    "telemetry.telemetryLevel": "off",
    "vim.easymotion": true,
    "vim.easymotionKeys": "hklyuiopnmqwertzxcvbasdgjf",
    "vim.foldfix": true,
    "vim.handleKeys": {
        "<C-d>": false,
        "<C-shift+d>": false
    },
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.color": "rgba(137, 220, 235, 0.25)",
    "vim.highlightedyank.duration": 700,
    "vim.leader": ",",
    "vim.normalModeKeyBindings": [
        // Close tab
        {
            "before": [
                "<leader>",
                "b",
                "c"
            ],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        // Zero moves to first character
        {
            "before": [
                "0"
            ],
            "after": [
                "^"
            ]
        },
        // Toggle word wrap
        {
            "before": [
                "<leader>",
                "n"
            ],
            "commands": [
                "editor.action.toggleWordWrap"
            ]
        },
        // Toggle comments and folds
        {
            "before": [
                "<leader>",
                "c"
            ],
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            "before": [
                "<leader>",
                "<space>"
            ],
            "commands": [
                "editor.toggleFold"
            ]
        },
        // Replace vim command mode with VS Code command palette
        {
            "before": [
                ":"
            ],
            "commands": [
                "workbench.action.showCommands"
            ],
            "silent": true
        },
        {
            "before": [
                "<leader>",
                "w"
            ],
            "commands": [
                "workbench.action.files.save"
            ]
        },
        // Git integration, move between hunks, hunk undo, etc.
        {
            "before": [
                "<leader>",
                "g",
                "g"
            ],
            "commands": [
                "workbench.view.scm"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "d"
            ],
            "commands": [
                "editor.action.dirtydiff.next"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "n"
            ],
            "commands": [
                "workbench.action.editor.nextChange"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "p"
            ],
            "commands": [
                "workbench.action.editor.previousChange"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "u"
            ],
            "commands": [
                "git.revertSelectedRanges"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "s"
            ],
            "commands": [
                "git.stageSelectedRanges"
            ]
        },
        // Show, move between, and fix diagnostics
        {
            "before": [
                "<leader>",
                "d",
                "d"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            "before": [
                "<leader>",
                "d",
                "f"
            ],
            "commands": [
                "editor.action.quickFix"
            ]
        },
        {
            "before": [
                "<leader>",
                "d",
                "n"
            ],
            "commands": [
                "editor.action.marker.next"
            ]
        },
        {
            "before": [
                "<leader>",
                "d",
                "p"
            ],
            "commands": [
                "editor.action.marker.prev"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "<leader>"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ]
        },
        // Space starts easymotion movement
        {
            "before": [
                "<space>"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "s"
            ]
        },
        // Use VS code undo and redo
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "U"
            ],
            "commands": [
                "redo"
            ]
        },
        {
            "before": [
                "<BS>"
            ],
            "after": [
                "{"
            ]
        },
        {
            "before": [
                "<CR>"
            ],
            "after": [
                "}"
            ]
        },
        {
            "before": [
                "R"
            ],
            "after": [
                "d",
                "i",
                "w",
                "\"",
                "0",
                "P"
            ]
        },
        // Copy and paste with system clipboard
        {
            "before": [
                "<leader>",
                "y"
            ],
            "after": [
                "\"",
                "+",
                "y"
            ]
        },
        {
            "before": [
                "<leader>",
                "y",
                "y"
            ],
            "after": [
                "\"",
                "+",
                "y",
                "y"
            ]
        },
        {
            "before": [
                "<leader>",
                "p"
            ],
            "after": [
                "\"",
                "+",
                "p"
            ]
        },
        {
            "before": [
                "<leader>",
                "P"
            ],
            "after": [
                "\"",
                "+",
                "P"
            ]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before": [
                "<space>"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "s"
            ]
        },
        {
            "before": [
                "<leader>",
                "c"
            ],
            "commands": [
                "editor.action.commentLine"
            ]
        },
        // Use VS Code < and > to indent and outdent
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        // Don't move cursor after yank
        {
            "before": [
                "y"
            ],
            "after": [
                "y",
                "g",
                "v",
                "<esc>"
            ]
        },
        // Copy and paste with system clipboard
        {
            "before": [
                "<leader>",
                "y"
            ],
            "after": [
                "\"",
                "+",
                "y",
                "g",
                "v",
                "<esc>"
            ]
        }
    ],
    "vim.useCtrlKeys": false,
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<BS>"
            ],
            "after": [
                "{"
            ]
        },
        {
            "before": [
                "<CR>"
            ],
            "after": [
                "}"
            ]
        },
        // Replace word with last yank
        {
            "before": [
                "R"
            ],
            "after": [
                "\"",
                "_",
                "d",
                "\"",
                "0",
                "P",
                "\""
            ]
        },
        // Copy and paste with system clipboard
        {
            "before": [
                "<leader>",
                "p"
            ],
            "after": [
                "\"",
                "+",
                "p"
            ]
        },
        {
            "before": [
                "<leader>",
                "P"
            ],
            "after": [
                "\"",
                "+",
                "P"
            ]
        }
    ],
    "window.commandCenter": false,
    "workbench.activityBar.location": "top",
    "workbench.colorTheme": "Catppuccin Mocha",
    "workbench.editorAssociations": {
        "*.copilotmd": "vscode.markdown.preview.editor",
        "file:/**/*.parquet": "jupyter-data-wrangler"
    },
    "workbench.layoutControl.enabled": false,
    "workbench.preferredDarkColorTheme": "Catppuccin Mocha",
    "workbench.sideBar.location": "right",
    "workbench.startupEditor": "none",
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll": "always",
            "source.organizeImports": "always"
        }
    },
    "[sql]": {
        "editor.defaultFormatter": "dorzey.vscode-sqlfluff"
    }
}
